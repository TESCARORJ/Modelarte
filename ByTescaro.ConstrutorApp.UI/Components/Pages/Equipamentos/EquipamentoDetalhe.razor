@page "/equipamentos/detalhes/{Id:long}"

@using ByTescaro.ConstrutorApp.Application.DTOs
@using ByTescaro.ConstrutorApp.Domain.Enums
@using ByTescaro.ConstrutorApp.UI.Services
@using System.Globalization
@using System.Reflection
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization
@using Radzen
@using Radzen.Blazor
@inject EquipamentoApiService EquipamentoApiService
@inject NavigationManager Navigation
@inject NotificationService NotificationService
@attribute [Authorize]

<PageTitle>Detalhes do Equipamento</PageTitle>

<RadzenCard Class="rz-mt-5 rz-p-4 rz-shadow-md rz-rounded-md rz-mx-auto" Style="max-width: 1300px; width: 100%;">
    <RadzenHeading Size="H4" Text="@Titulo" Class="rz-mb-3" /> @* Título dinâmico *@

    @if (equipamento is null)
    {
        <RadzenText Text="Carregando detalhes do equipamento ou equipamento não encontrado." Style="color: gray; padding: 1rem;" />
        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="margin-top: 10px;" />
    }
    else
    {
        <RadzenFieldset Text="Dados do Equipamento" Style="margin-bottom: 1.5rem;">
            <RadzenRow>
                <RadzenColumn Size="12" SizeMD="6">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Nome:</strong> <span>@equipamento.Nome</span>
                    </RadzenText>
                </RadzenColumn>

                <RadzenColumn Size="12" SizeMD="6">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Patrimônio:</strong> <span>@equipamento.Patrimonio</span>
                    </RadzenText>
                </RadzenColumn>

                <RadzenColumn Size="12">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Descrição:</strong> <span>@equipamento.Descricao</span>
                    </RadzenText>
                </RadzenColumn>

                <RadzenColumn Size="12" SizeMD="6">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Custo de Locação Diária (R$):</strong> <span>@equipamento.CustoLocacaoDiaria?.ToString("C", CultureInfo.CurrentCulture)</span>
                    </RadzenText>
                </RadzenColumn>

                <RadzenColumn Size="12" SizeMD="6">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Status:</strong> <span>@equipamento.Status.ToString()</span>
                    </RadzenText>
                </RadzenColumn>
            </RadzenRow>
        </RadzenFieldset>

        <RadzenFieldset Text="Dados de Auditoria" Style="margin-bottom: 1.5rem;">
            <RadzenRow>
                <RadzenColumn Size="12" SizeMD="6">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Usuário Cadastro:</strong> <span>@equipamento.UsuarioCadastroNome</span>
                    </RadzenText>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="6">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Data/Hora Cadastro:</strong> <span>@equipamento.DataHoraCadastro.ToString("dd/MM/yyyy HH:mm:ss")</span>
                    </RadzenText>
                </RadzenColumn>              
            </RadzenRow>
        </RadzenFieldset>


        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="1rem" Class="rz-mt-3">
            <RadzenButton Text="Voltar"
                          ButtonStyle="ButtonStyle.Light"
                          Click="@(() => Navigation.NavigateTo("/equipamentos"))" />
            <RadzenButton Text="Editar"
                          Icon="edit"
                          ButtonStyle="ButtonStyle.Primary"
                          Click="@(() => Navigation.NavigateTo($"/equipamentos/editar/{equipamento.Id}"))" />
        </RadzenStack>
    }
</RadzenCard>

@code {
    [Parameter]
    public long Id { get; set; }

    private EquipamentoDto? equipamento;
    private string Titulo => $"Detalhes do Equipamento: {equipamento?.Nome ?? "Carregando..."}";

    protected override async Task OnInitializedAsync()
    {
        equipamento = await EquipamentoApiService.GetByIdAsync(Id);
    }
}