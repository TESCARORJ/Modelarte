// <auto-generated />
using System;
using ByTescaro.ConstrutorApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ByTescaro.ConstrutorApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250801183859_personalizacao3")]
    partial class personalizacao3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Admin.PerfilUsuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("PerfilUsuario", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ConfiguracaoLembreteDiario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("HoraDoDia")
                        .HasColumnType("time");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ConfiguracaoLembreteDiario", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Endereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CEP")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estado")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Numero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UF")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Equipamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<decimal>("CustoLocacaoDiaria")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Patrimonio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Patrimonio");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("Equipamento", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Evento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataFimRecorrencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FrequenciaRecorrencia")
                        .HasColumnType("int");

                    b.Property<bool>("IsRecorrente")
                        .HasColumnType("bit");

                    b.Property<string>("Titulo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Visibilidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("Evento", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.FornecedorInsumo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<long>("FornecedorId")
                        .HasColumnType("bigint");

                    b.Property<long>("InsumoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Observacao")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrazoEntregaDias")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("InsumoId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("FornecedorInsumo", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.FornecedorServico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<long>("FornecedorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Observacao")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrazoEntregaDias")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("ServicoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("ServicoId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("FornecedorServico", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Funcao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("Funcao", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Insumo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UnidadeMedida")
                        .HasColumnType("int");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("Insumo", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.LembreteEvento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enviado")
                        .HasColumnType("bit");

                    b.Property<long>("EventoId")
                        .HasColumnType("bigint");

                    b.Property<int>("TempoAntes")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadeTempo")
                        .HasColumnType("int");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("LembreteEvento", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.LogAuditoria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DadosAnteriores")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DadosAtuais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entidade")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdEntidade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TipoLogAuditoria")
                        .HasColumnType("int");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.Property<string>("UsuarioNome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DataHora");

                    b.HasIndex("Entidade");

                    b.HasIndex("TipoLogAuditoria");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LogAuditoria", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Obra", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicioExecucao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("ProjetoId")
                        .HasColumnType("bigint");

                    b.Property<int>("ResponsavelMaterial")
                        .HasColumnType("int");

                    b.Property<long?>("ResponsavelObraId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.HasIndex("ResponsavelObraId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("Obra", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraDocumento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CaminhoRelativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extensao")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NomeOriginal")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("ObraId")
                        .HasColumnType("bigint");

                    b.Property<long>("TamanhoEmKb")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraDocumento", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraEquipamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataFimUso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicioUso")
                        .HasColumnType("datetime2");

                    b.Property<long>("EquipamentoId")
                        .HasColumnType("bigint");

                    b.Property<string>("EquipamentoNome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ObraId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EquipamentoId");

                    b.HasIndex("ObraId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraEquipamento", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraEtapa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("ObraId")
                        .HasColumnType("bigint");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraEtapa", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraEtapaPadrao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraEtapaPadrao", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraFornecedor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<long>("FornecedorId")
                        .HasColumnType("bigint");

                    b.Property<string>("FornecedorNome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ObraId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("ObraId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraFornecedor", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraFuncionario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("FuncaoNoObra")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("FuncionarioId")
                        .HasColumnType("bigint");

                    b.Property<string>("FuncionarioNome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ObraId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ObraId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraFuncionario", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraImagem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CaminhoRelativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeOriginal")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("ObraId")
                        .HasColumnType("bigint");

                    b.Property<long>("TamanhoEmKb")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraImagem", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraInsumo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRecebimento")
                        .HasColumnType("datetime2");

                    b.Property<long>("InsumoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsRecebido")
                        .HasColumnType("bit");

                    b.Property<long>("ObraId")
                        .HasColumnType("bigint");

                    b.Property<long>("ObraInsumoListaId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("ObraId");

                    b.HasIndex("ObraInsumoListaId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraInsumo", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraInsumoLista", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<long>("ObraId")
                        .HasColumnType("bigint");

                    b.Property<long>("ResponsavelId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.HasIndex("ResponsavelId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraInsumoLista", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraItemEtapa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<bool>("Concluido")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiasPrazo")
                        .HasColumnType("int");

                    b.Property<bool>("IsDataPrazo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("ObraEtapaId")
                        .HasColumnType("bigint");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<bool>("PrazoAtivo")
                        .HasColumnType("bit");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ObraEtapaId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraItemEtapa", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraItemEtapaPadrao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiasPrazo")
                        .HasColumnType("int");

                    b.Property<bool>("IsDataPrazo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("ObraEtapaPadraoId")
                        .HasColumnType("bigint");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ObraEtapaPadraoId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraItemEtapaPadrao", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraItemEtapaPadraoInsumo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<long>("InsumoId")
                        .HasColumnType("bigint");

                    b.Property<long>("ObraItemEtapaPadraoId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("QuantidadeSugerida")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("ObraItemEtapaPadraoId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraItemEtapaPadraoInsumo", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraPendencia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("ObraId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ResponsavelId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.HasIndex("ResponsavelId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraPendencia", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraRetrabalho", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("ObraId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ResponsavelId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.HasIndex("ResponsavelId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraRetrabalho", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraServico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<long>("ObraId")
                        .HasColumnType("bigint");

                    b.Property<long>("ObraServicoListaId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("ServicoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.HasIndex("ObraServicoListaId");

                    b.HasIndex("ServicoId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraServico", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraServicoLista", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<long>("ObraId")
                        .HasColumnType("bigint");

                    b.Property<long>("ResponsavelId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.HasIndex("ResponsavelId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("ObraServicoLista", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Orcamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataReferencia")
                        .HasColumnType("datetime2");

                    b.Property<long>("ObraId")
                        .HasColumnType("bigint");

                    b.Property<string>("Responsavel")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("TotalEstimado")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("Orcamento", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.OrcamentoItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FornecedorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsumoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrcamentoId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrcamentoObraId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("ServicoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("InsumoId");

                    b.HasIndex("OrcamentoId");

                    b.HasIndex("OrcamentoObraId");

                    b.HasIndex("ServicoId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("OrcamentoItem", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.OrcamentoObra", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataReferencia")
                        .HasColumnType("datetime2");

                    b.Property<long>("ObraId")
                        .HasColumnType("bigint");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsavel")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalEstimado")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCadastroId");

                    b.HasIndex("ObraId", "DataReferencia")
                        .IsUnique();

                    b.ToTable("OrcamentoObra", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ParticipanteEvento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataResposta")
                        .HasColumnType("datetime2");

                    b.Property<long>("EventoId")
                        .HasColumnType("bigint");

                    b.Property<int?>("StatusParticipacao")
                        .HasColumnType("int");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("UsuarioCadastroId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ParticipantesEvento");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Personalizacao", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CorHeader")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CorMenu")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CorTextHeader")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailEmpresa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EnderecoEmpresa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FaviconUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImagemFundoLoginUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LogotipoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NomeEmpresa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TelefoneEmpresa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TextoBoasVindas")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TextoFooter")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("Personalizacao", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Pessoa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CpfCnpj")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("EnderecoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Sobrenome")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TelefonePrincipal")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TelefoneWhatsApp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TipoEntidade")
                        .HasColumnType("int");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("int");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("Pessoa", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Projeto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<long?>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EnderecoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TelefonePrincipal")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("Projeto", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Servico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("UsuarioCadastroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("Servico", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", b =>
                {
                    b.HasBaseType("ByTescaro.ConstrutorApp.Domain.Entities.Pessoa");

                    b.Property<long>("PerfilUsuarioId")
                        .HasColumnType("bigint");

                    b.Property<string>("SenhaHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasIndex("Email");

                    b.HasIndex("PerfilUsuarioId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Cliente", b =>
                {
                    b.HasBaseType("ByTescaro.ConstrutorApp.Domain.Entities.Pessoa");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Fornecedor", b =>
                {
                    b.HasBaseType("ByTescaro.ConstrutorApp.Domain.Entities.Pessoa");

                    b.Property<int>("TipoFornecedor")
                        .HasColumnType("int");

                    b.ToTable("Fornecedor", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Funcionario", b =>
                {
                    b.HasBaseType("ByTescaro.ConstrutorApp.Domain.Entities.Pessoa");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDemissao")
                        .HasColumnType("datetime2");

                    b.Property<long>("FuncaoId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18, 2)");

                    b.HasIndex("FuncaoId");

                    b.ToTable("Funcionario", (string)null);
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Admin.PerfilUsuario", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ConfiguracaoLembreteDiario", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Equipamento", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Evento", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.FornecedorInsumo", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Fornecedor");

                    b.Navigation("Insumo");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.FornecedorServico", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Fornecedor");

                    b.Navigation("Servico");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Funcao", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Insumo", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.LembreteEvento", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Evento", "Evento")
                        .WithMany("Lembretes")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Evento");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Obra", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Projeto", "Projeto")
                        .WithMany("Obras")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Funcionario", "ResponsavelObra")
                        .WithMany()
                        .HasForeignKey("ResponsavelObraId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Projeto");

                    b.Navigation("ResponsavelObra");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraDocumento", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Obra", "Obra")
                        .WithMany("Documentos")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Obra");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraEquipamento", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Equipamento", "Equipamento")
                        .WithMany("ProjetoEquipamentos")
                        .HasForeignKey("EquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Obra", "Obra")
                        .WithMany("Equipamentos")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Equipamento");

                    b.Navigation("Obra");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraEtapa", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Obra", "Obra")
                        .WithMany("Etapas")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Obra");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraEtapaPadrao", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraFornecedor", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Obra", "Obra")
                        .WithMany("Fornecedores")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Fornecedor");

                    b.Navigation("Obra");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraFuncionario", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Funcionario", "Funcionario")
                        .WithMany("ProjetoFuncionarios")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Obra", "Obra")
                        .WithMany("Funcionarios")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Funcionario");

                    b.Navigation("Obra");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraImagem", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Obra", "Obra")
                        .WithMany("Imagens")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Obra");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraInsumo", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Obra", "Obra")
                        .WithMany("Insumos")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.ObraInsumoLista", "Lista")
                        .WithMany("Itens")
                        .HasForeignKey("ObraInsumoListaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Insumo");

                    b.Navigation("Lista");

                    b.Navigation("Obra");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraInsumoLista", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Obra", "Obra")
                        .WithMany("ListasInsumo")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Funcionario", "Responsavel")
                        .WithMany()
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Obra");

                    b.Navigation("Responsavel");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraItemEtapa", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.ObraEtapa", "ObraEtapa")
                        .WithMany("Itens")
                        .HasForeignKey("ObraEtapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("ObraEtapa");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraItemEtapaPadrao", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.ObraEtapaPadrao", "ObraEtapaPadrao")
                        .WithMany("Itens")
                        .HasForeignKey("ObraEtapaPadraoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("ObraEtapaPadrao");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraItemEtapaPadraoInsumo", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.ObraItemEtapaPadrao", "ObraItemEtapaPadrao")
                        .WithMany("Insumos")
                        .HasForeignKey("ObraItemEtapaPadraoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Insumo");

                    b.Navigation("ObraItemEtapaPadrao");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraPendencia", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Obra", "Obra")
                        .WithMany("Pendencias")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Funcionario", "Responsavel")
                        .WithMany()
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Obra");

                    b.Navigation("Responsavel");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraRetrabalho", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Obra", "Obra")
                        .WithMany("Retrabalhos")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Funcionario", "Responsavel")
                        .WithMany()
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Obra");

                    b.Navigation("Responsavel");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraServico", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Obra", "Obra")
                        .WithMany("Servicos")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.ObraServicoLista", "Lista")
                        .WithMany("Itens")
                        .HasForeignKey("ObraServicoListaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Lista");

                    b.Navigation("Obra");

                    b.Navigation("Servico");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraServicoLista", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Obra", "Obra")
                        .WithMany("ListasServico")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Funcionario", "Responsavel")
                        .WithMany()
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Obra");

                    b.Navigation("Responsavel");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Orcamento", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Obra", "Obra")
                        .WithMany()
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Obra");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.OrcamentoItem", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Orcamento", null)
                        .WithMany("Itens")
                        .HasForeignKey("OrcamentoId");

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.OrcamentoObra", "OrcamentoObra")
                        .WithMany("Itens")
                        .HasForeignKey("OrcamentoObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Fornecedor");

                    b.Navigation("Insumo");

                    b.Navigation("OrcamentoObra");

                    b.Navigation("Servico");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.OrcamentoObra", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Obra", "Obra")
                        .WithMany()
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Obra");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ParticipanteEvento", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Evento", "Evento")
                        .WithMany("Participantes")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Personalizacao", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Pessoa", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Endereco");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Projeto", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Projetos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("Cliente");

                    b.Navigation("Endereco");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Servico", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "UsuarioCadastro")
                        .WithMany()
                        .HasForeignKey("UsuarioCadastroId");

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("ByTescaro.ConstrutorApp.Domain.Entities.Admin.Usuario", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Admin.PerfilUsuario", "PerfilUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilUsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PerfilUsuario");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Cliente", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("ByTescaro.ConstrutorApp.Domain.Entities.Cliente", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Fornecedor", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("ByTescaro.ConstrutorApp.Domain.Entities.Fornecedor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Funcionario", b =>
                {
                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Funcao", "Funcao")
                        .WithMany()
                        .HasForeignKey("FuncaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByTescaro.ConstrutorApp.Domain.Entities.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("ByTescaro.ConstrutorApp.Domain.Entities.Funcionario", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcao");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Admin.PerfilUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Equipamento", b =>
                {
                    b.Navigation("ProjetoEquipamentos");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Evento", b =>
                {
                    b.Navigation("Lembretes");

                    b.Navigation("Participantes");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Obra", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Equipamentos");

                    b.Navigation("Etapas");

                    b.Navigation("Fornecedores");

                    b.Navigation("Funcionarios");

                    b.Navigation("Imagens");

                    b.Navigation("Insumos");

                    b.Navigation("ListasInsumo");

                    b.Navigation("ListasServico");

                    b.Navigation("Pendencias");

                    b.Navigation("Retrabalhos");

                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraEtapa", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraEtapaPadrao", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraInsumoLista", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraItemEtapaPadrao", b =>
                {
                    b.Navigation("Insumos");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.ObraServicoLista", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Orcamento", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.OrcamentoObra", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Projeto", b =>
                {
                    b.Navigation("Obras");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("ByTescaro.ConstrutorApp.Domain.Entities.Funcionario", b =>
                {
                    b.Navigation("ProjetoFuncionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
