@page "/cliente/detalhes/{Id:long}"

@using ByTescaro.ConstrutorApp.Application.DTOs
@using ByTescaro.ConstrutorApp.Domain.Enums
@using ByTescaro.ConstrutorApp.Application.Utils
@using ByTescaro.ConstrutorApp.UI.Services
@using Microsoft.AspNetCore.Authorization
@using Radzen 
@using Radzen.Blazor 
@inject ClienteApiService ClienteApiService
@inject NavigationManager Navigation
@attribute [Authorize]

<PageTitle>Detalhes do Cliente</PageTitle>

<RadzenCard Class="rz-mt-5 rz-p-4 rz-shadow-md rz-rounded-md rz-mx-auto" Style="max-width: 1300px; width: 100%;">
    <RadzenHeading Size="H4" Text="@Titulo" Class="rz-mb-3" /> @* Título dinâmico *@

    @if (cliente is null)
    {
        <RadzenText Text="Carregando detalhes do cliente ou cliente não encontrado..." Style="color: gray; padding: 1rem;" />
        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="margin-top: 10px;" />
    }
    else
    {
        <RadzenFieldset Text="Informações Pessoais" Style="margin-bottom: 1.5rem">
            <RadzenRow Class="rz-p-4" Style="row-gap: 1rem;">
                <RadzenColumn Size="12" SizeMD="6">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Nome: </strong> <span>@cliente.Nome</span>
                    </RadzenText>
                </RadzenColumn>

                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Tipo de Pessoa: </strong> <span>@(cliente.TipoPessoa.HasValue ? EnumHelper.ObterDescricaoEnum(cliente.TipoPessoa.Value) : string.Empty)</span>
                    </RadzenText>
                </RadzenColumn>

                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>CPF ou CNPJ: </strong> <span>@cliente.CpfCnpj</span>
                    </RadzenText>
                </RadzenColumn>
            </RadzenRow>
        </RadzenFieldset>

        <RadzenFieldset Text="Contato" Style="margin-bottom: 1.5rem">
            <RadzenRow Class="rz-p-4" Style="row-gap: 1rem;">
                <RadzenColumn Size="12" SizeMD="4">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Telefone Principal: </strong> <span>@cliente.TelefonePrincipal</span>
                    </RadzenText>
                </RadzenColumn>

                <RadzenColumn Size="12" SizeMD="4">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>WhatsApp: </strong> <span>@cliente.TelefoneWhatsApp</span>
                    </RadzenText>
                </RadzenColumn>

                <RadzenColumn Size="12" SizeMD="4">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Email: </strong> <span>@cliente.Email</span>
                    </RadzenText>
                </RadzenColumn>
            </RadzenRow>
        </RadzenFieldset>

        <RadzenFieldset Text="Endereço" Style="margin-bottom: 1.5rem">
            <RadzenRow Class="rz-p-4" Style="row-gap: 1rem;">
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>CEP: </strong> <span>@cliente.CEP</span>
                    </RadzenText>
                </RadzenColumn>

                <RadzenColumn Size="12" SizeMD="6">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Logradouro: </strong> <span>@cliente.Logradouro</span>
                    </RadzenText>
                </RadzenColumn>

                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Número: </strong> <span>@cliente.Numero</span>
                    </RadzenText>
                </RadzenColumn>

                <RadzenColumn Size="12" SizeMD="4">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Complemento: </strong> <span>@cliente.Complemento</span>
                    </RadzenText>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="4">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Bairro: </strong> <span>@cliente.Bairro</span>
                    </RadzenText>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="4">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Cidade: </strong> <span>@cliente.Cidade</span>
                    </RadzenText>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="6">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>Estado: </strong> <span>@cliente.Estado</span>
                    </RadzenText>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="2">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <strong>UF: </strong> <span>@cliente.UF</span>
                    </RadzenText>
                </RadzenColumn>
            </RadzenRow>
        </RadzenFieldset>

        <RadzenDivider Style="margin: 2rem 0;" />

        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="1rem" Class="rz-mt-3">
            <RadzenButton Text="Voltar"
                          Click="@(() => Navigation.NavigateTo("/clientes"))"
                          ButtonStyle="ButtonStyle.Light" />

            <RadzenButton Text="Editar"
                          Icon="edit"
                          Click="@(() => Navigation.NavigateTo($"/cliente/editar/{cliente.Id}"))"
                          ButtonStyle="ButtonStyle.Primary" />
        </RadzenStack>
    }
</RadzenCard>

@code {
    [Parameter]
    public long Id { get; set; }

    private ClienteDto? cliente;
    private string Titulo => $"Detalhes do Cliente: {cliente?.Nome ?? "Carregando..."}";

    protected override async Task OnInitializedAsync()
    {
        cliente = await ClienteApiService.GetByIdAsync(Id);
    }
}